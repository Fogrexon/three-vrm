/*! (c) 2020-2021 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
import*as e from"three";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function o(e,o,i,t){return new(i||(i=Promise))((function(r,n){function l(e){try{a(t.next(e))}catch(e){n(e)}}function s(e){try{a(t.throw(e))}catch(e){n(e)}}function a(e){var o;e.done?r(e.value):(o=e.value,o instanceof i?o:new i((function(e){e(o)}))).then(l,s)}a((t=t.apply(e,o||[])).next())}))}function i(e){return Math.pow(e,2.2)}class t{constructor(e){var o;this.parser=e;const i=this.parser.json;i.extensionsUsed=null!==(o=i.extensionsUsed)&&void 0!==o?o:[],-1===i.extensionsUsed.indexOf("KHR_texture_transform")&&i.extensionsUsed.push("KHR_texture_transform")}get name(){return"VRMMaterialsV0CompatPlugin"}beforeRoot(){var e;return o(this,void 0,void 0,(function*(){const o=this.parser.json,i=null===(e=o.extensions)||void 0===e?void 0:e.VRM,t=null==i?void 0:i.materialProperties;t&&t.forEach(((e,i)=>{var t;if("VRM/MToon"===e.shader){const t=this._parseV0MToonProperties(e,o.materials[i]);o.materials[i]=t}else if(null===(t=e.shader)||void 0===t?void 0:t.startsWith("VRM/Unlit")){const t=this._parseV0UnlitProperties(e,o.materials[i]);o.materials[i]=t}else"VRM_USE_GLTFSHADER"===e.shader||console.warn(`VRMMaterialsV0CompatPlugin: Unknown shader: ${e.shader}`)}))}))}_parseV0MToonProperties(o,t){var r,n,l,s,a,d,u,v,p,c,x,h,_,m,f,P,M,T,R,g,C,O,b,F,S,A,U,V,L,j,W,y,E,w,Q,N,H,k,B,D,K,Z,I,X;const Y=null!==(n=null===(r=o.keywordMap)||void 0===r?void 0:r._ALPHABLEND_ON)&&void 0!==n&&n,q=1===(null===(l=o.floatProperties)||void 0===l?void 0:l._ZWrite)&&Y,z=this._v0ParseRenderQueue(o),G=null!==(a=null===(s=o.keywordMap)||void 0===s?void 0:s._ALPHATEST_ON)&&void 0!==a&&a,$=Y?"BLEND":G?"MASK":"OPAQUE",J=G?null===(d=o.floatProperties)||void 0===d?void 0:d._Cutoff:void 0,ee=0===(null!==(v=null===(u=o.floatProperties)||void 0===u?void 0:u._CullMode)&&void 0!==v?v:2),oe=this._portTextureTransform(o),ie=null===(c=null===(p=o.vectorProperties)||void 0===p?void 0:p._Color)||void 0===c?void 0:c.map(((e,o)=>3===o?e:i(e))),te=null===(x=o.textureProperties)||void 0===x?void 0:x._MainTex,re=null!=te?{index:te,extensions:Object.assign({},oe)}:void 0,ne=null===(h=o.floatProperties)||void 0===h?void 0:h._BumpScale,le=null===(_=o.textureProperties)||void 0===_?void 0:_._BumpMap,se=null!=le?{index:le,scale:ne,extensions:Object.assign({},oe)}:void 0,ae=null===(f=null===(m=o.vectorProperties)||void 0===m?void 0:m._EmissionColor)||void 0===f?void 0:f.map(i),de=null===(P=o.textureProperties)||void 0===P?void 0:P._EmissionMap,ue=null!=de?{index:de,extensions:Object.assign({},oe)}:void 0,ve=null===(T=null===(M=o.vectorProperties)||void 0===M?void 0:M._ShadeColor)||void 0===T?void 0:T.map(i),pe=null===(R=o.textureProperties)||void 0===R?void 0:R._ShadeTexture,ce=null!=pe?{index:pe,extensions:Object.assign({},oe)}:void 0;let xe=null!==(C=null===(g=o.floatProperties)||void 0===g?void 0:g._ShadeShift)&&void 0!==C?C:0,he=null!==(b=null===(O=o.floatProperties)||void 0===O?void 0:O._ShadeToony)&&void 0!==b?b:.9;he=e.MathUtils.lerp(he,1,.5+.5*xe),xe=-xe-(1-he);const _e=null===(F=o.floatProperties)||void 0===F?void 0:F._IndirectLightIntensity,me=_e?1-_e:void 0,fe=null===(S=o.textureProperties)||void 0===S?void 0:S._SphereAdd,Pe=null!=fe?{index:fe}:void 0,Me=null===(A=o.floatProperties)||void 0===A?void 0:A._RimLightingMix,Te=null===(U=o.textureProperties)||void 0===U?void 0:U._RimTexture,Re=null!=Te?{index:Te,extensions:Object.assign({},oe)}:void 0,ge=null===(L=null===(V=o.vectorProperties)||void 0===V?void 0:V._RimColor)||void 0===L?void 0:L.map(i),Ce=null===(j=o.floatProperties)||void 0===j?void 0:j._RimFresnelPower,Oe=null===(W=o.floatProperties)||void 0===W?void 0:W._RimLift,be=["none","worldCoordinates","screenCoordinates"][null!==(E=null===(y=o.floatProperties)||void 0===y?void 0:y._OutlineWidthMode)&&void 0!==E?E:0];let Fe=null!==(Q=null===(w=o.floatProperties)||void 0===w?void 0:w._OutlineWidth)&&void 0!==Q?Q:0;Fe*=.01;const Se=null===(N=o.textureProperties)||void 0===N?void 0:N._OutlineWidthTexture,Ae=null!=Se?{index:Se,extensions:Object.assign({},oe)}:void 0,Ue=null===(k=null===(H=o.vectorProperties)||void 0===H?void 0:H._OutlineColor)||void 0===k?void 0:k.map(i),Ve=1===(null===(B=o.floatProperties)||void 0===B?void 0:B._OutlineColorMode)?null===(D=o.floatProperties)||void 0===D?void 0:D._OutlineLightingMix:0,Le=null===(K=o.textureProperties)||void 0===K?void 0:K._UvAnimMaskTexture,je=null!=Le?{index:Le,extensions:Object.assign({},oe)}:void 0,We=null===(Z=o.floatProperties)||void 0===Z?void 0:Z._UvAnimScrollX;let ye=null===(I=o.floatProperties)||void 0===I?void 0:I._UvAnimScrollY;null!=ye&&(ye=-ye);const Ee={specVersion:"1.0-beta",transparentWithZWrite:q,renderQueueOffsetNumber:z,shadeColorFactor:ve,shadeMultiplyTexture:ce,shadingShiftFactor:xe,shadingToonyFactor:he,giEqualizationFactor:me,matcapTexture:Pe,rimLightingMixFactor:Me,rimMultiplyTexture:Re,parametricRimColorFactor:ge,parametricRimFresnelPowerFactor:Ce,parametricRimLiftFactor:Oe,outlineWidthMode:be,outlineWidthFactor:Fe,outlineWidthMultiplyTexture:Ae,outlineColorFactor:Ue,outlineLightingMixFactor:Ve,uvAnimationMaskTexture:je,uvAnimationScrollXSpeedFactor:We,uvAnimationScrollYSpeedFactor:ye,uvAnimationRotationSpeedFactor:null===(X=o.floatProperties)||void 0===X?void 0:X._UvAnimRotation};return Object.assign(Object.assign({},t),{pbrMetallicRoughness:{baseColorFactor:ie,baseColorTexture:re},normalTexture:se,emissiveTexture:ue,emissiveFactor:ae,alphaMode:$,alphaCutoff:J,doubleSided:ee,extensions:{VRMC_materials_mtoon:Ee}})}_parseV0UnlitProperties(e,o){var t,r,n,l;const s="VRM/UnlitTransparentZWrite"===e.shader,a="VRM/UnlitTransparent"===e.shader||s,d=this._v0ParseRenderQueue(e),u="VRM/UnlitCutout"===e.shader,v=a?"BLEND":u?"MASK":"OPAQUE",p=u?null===(t=e.floatProperties)||void 0===t?void 0:t._Cutoff:void 0,c=this._portTextureTransform(e),x=null===(n=null===(r=e.vectorProperties)||void 0===r?void 0:r._Color)||void 0===n?void 0:n.map(i),h=null===(l=e.textureProperties)||void 0===l?void 0:l._MainTex,_=null!=h?{index:h,extensions:Object.assign({},c)}:void 0,m={specVersion:"1.0-beta",transparentWithZWrite:s,renderQueueOffsetNumber:d,shadeColorFactor:x,shadeMultiplyTexture:_};return Object.assign(Object.assign({},o),{pbrMetallicRoughness:{baseColorFactor:x,baseColorTexture:_},alphaMode:v,alphaCutoff:p,extensions:{VRMC_materials_mtoon:m}})}_portTextureTransform(e){var o,i,t,r,n;const l=null===(o=e.vectorProperties)||void 0===o?void 0:o._MainTex;if(null==l)return{};const s=[null!==(i=null==l?void 0:l[0])&&void 0!==i?i:0,null!==(t=null==l?void 0:l[1])&&void 0!==t?t:0],a=[null!==(r=null==l?void 0:l[2])&&void 0!==r?r:1,null!==(n=null==l?void 0:l[3])&&void 0!==n?n:1];return s[1]=a[1]*(1-s[1])%1,{KHR_texture_transform:{offset:s,scale:a}}}_v0ParseRenderQueue(e){var o,i,t;const r=null!==(i=null===(o=e.keywordMap)||void 0===o?void 0:o._ALPHABLEND_ON)&&void 0!==i&&i,n=1===(null===(t=e.floatProperties)||void 0===t?void 0:t._ZWrite);let l=0;return r&&e.renderQueue&&(l=n?Math.min(Math.max(e.renderQueue-2501,0),9):Math.min(Math.max(e.renderQueue-3e3,-9),0)),l}}export{t as VRMMaterialsV0CompatPlugin};
